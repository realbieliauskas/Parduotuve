// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parduotuve.Data;

#nullable disable

namespace Parduotuve.Migrations
{
    [DbContext(typeof(StoreDataContext))]
    [Migration("20250424115340_Cleanup seeding")]
    partial class Cleanupseeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Parduotuve.Data.Entities.Chroma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SkinId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SkinId");

                    b.ToTable("Chromas", (string)null);
                });

            modelBuilder.Entity("Parduotuve.Data.Entities.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Parduotuve.Data.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SkinId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SkinId");

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("Parduotuve.Data.Entities.Session", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Parduotuve.Data.Entities.Skin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChampionName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CinematicSplashUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Quote")
                        .HasColumnType("TEXT");

                    b.Property<string>("SplashUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skins", (string)null);
                });

            modelBuilder.Entity("Parduotuve.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Email = "alv@crz.com",
                            Password = "crz",
                            Role = 0,
                            Username = "alv"
                        });
                });

            modelBuilder.Entity("Parduotuve.Data.Entities.Chroma", b =>
                {
                    b.HasOne("Parduotuve.Data.Entities.Skin", "Skin")
                        .WithMany("ChromaList")
                        .HasForeignKey("SkinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skin");
                });

            modelBuilder.Entity("Parduotuve.Data.Entities.Order", b =>
                {
                    b.HasOne("Parduotuve.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Parduotuve.Data.Entities.OrderItem", b =>
                {
                    b.HasOne("Parduotuve.Data.Entities.Skin", "Skin")
                        .WithMany()
                        .HasForeignKey("SkinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skin");
                });

            modelBuilder.Entity("Parduotuve.Data.Entities.Session", b =>
                {
                    b.HasOne("Parduotuve.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Parduotuve.Data.Entities.Skin", b =>
                {
                    b.Navigation("ChromaList");
                });
#pragma warning restore 612, 618
        }
    }
}
