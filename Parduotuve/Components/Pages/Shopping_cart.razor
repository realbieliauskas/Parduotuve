@using Parduotuve.Services
@using Parduotuve.Data.Repositories
@using Parduotuve.Data.Entities
@page "/Shopping_cart"
@rendermode InteractiveServer
@inject Shopping_Cart_Service ShoppingCart
@inject NavigationManager Navigator
@inject ISkinRepository _skinRepository

<head>
    <style>
        .table {
        border-collapse: collapse;
        margin: 0 auto;
        }

        .cell {
        width: 15px;
        height: 15px;
        border: 1px solid black;
        text-align: center;
        }

        .white {
        background-color: white;
        }

        .black {
        background-color: black;
        }

        body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
        margin: 0;
        padding: 0;
        text-align: center;
        }

        #form1 {
        max-width: 1000px;
        min-block-size: 200px;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
        align-content: center;
        }

        h1 {
        text-align: center;
        margin-bottom: 40px;
        }

        #Button {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 10px 20px;
        font-size: 14px;
        cursor: pointer;
        border-radius: 5px;
        margin-bottom: 10px;
        }
    </style>
</head>

<body>
    <form id="form1">
        <div>
            <h2>Shopping cart</h2>
            @if (ShoppingCart.IsEmpty())
            {
                <p>Your shopping cart is empty, go to browse page and order, what you want</p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Increase</th>
                            <th>Decrease</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ShoppingCart)
                        {
                            Skin skin = GetSkin(item.Key);
                            @if (skin!=null)
                            {
                                <tr>
                                    <td>@skin.Name</td>
                                    <td>@skin.Price €</td>
                                    <td>@item.Value</td>
                                    <td><button @onclick="@(() => IncreaseQuantity(item.Key))">+</button></td>
                                    <td><button @onclick="@(() => DecreaseQuantity(item.Key))">-</button></td>
                                    <td>@Total(skin.Price, item.Value) €</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                <h3>Total: @Total() €</h3>
                <button id="Button" @onclick="HandleCheckout">Proceed to Checkout</button>
            }
        </div>
    </form>

</body>



@code {

    private IEnumerable<Skin> Skins { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Skins = await _skinRepository.GetAllAsync();

    }

    private async Task IncreaseQuantity(int id)
    {
        ShoppingCart.Increase(id);
        await InvokeAsync(StateHasChanged);
    }


    private async Task DecreaseQuantity(int id)
    {
        ShoppingCart.Decrease(id);
        await InvokeAsync(StateHasChanged);
    }
    private double? GetTotalPrice()
    {
        double? sum = 0;
        foreach(var item in ShoppingCart)
        {
            Skin skin = GetSkin(item.Key);
            if (skin.Price!=null)
            {
                sum += skin.Price * item.Value;
            }
        }
        return sum;
    }

    private void HandleCheckout()
    {
        Console.WriteLine("Proceeding to checkout...");
    }
    private Skin GetSkin(int id)
    { 
        foreach(var item in Skins)
        {
            if (item.Id==id)
            {
                return item;
            }
        }
        return null;
    }
    private string Total()
    {
        return $"{GetTotalPrice():f2}";
    }
    private async Task Navitage_to_Browse ()
    {
        Navigator.NavigateTo("/Browse");
        await InvokeAsync(StateHasChanged);
    }
    private string Total(double? price, int quantity)
    {
        return $"{price*quantity:f2}";
    }
}